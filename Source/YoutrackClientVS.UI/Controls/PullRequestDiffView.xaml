<UserControl x:Class="YouTrackClientVS.UI.Controls.PullRequestDiffView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:gitClientModels1="clr-namespace:YouTrackClientVS.Contracts.Models.GitClientModels;assembly=YouTrackClientVS.Contracts"
             xmlns:tree="clr-namespace:YouTrackClientVS.Contracts.Models.Tree;assembly=YouTrackClientVS.Contracts"
             xmlns:viewModels="clr-namespace:YouTrackClientVS.Infrastructure.ViewModels;assembly=YouTrackClientVS.Infrastructure"
             xmlns:styles="clr-namespace:YouTrackClientVS.UI.Styles"
             xmlns:converters="clr-namespace:YouTrackClientVS.UI.Converters"
             xmlns:attachedProperties="clr-namespace:YouTrackClientVS.UI.AttachedProperties"
             xmlns:controls1="clr-namespace:YouTrackClientVS.UI.Controls"
             xmlns:bindings="clr-namespace:YouTrackClientVS.UI.Bindings"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
            d:DataContext="{d:DesignInstance viewModels:PullRequestDiffViewModel,IsDesignTimeCreatable=False}" 
             x:Name="PqDiffView"
             >
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <styles:SharedResourceDictionary Source="pack://application:,,,/YouTrackClientVS.UI;component/Styles/SharedDictionary.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />

                </ResourceDictionary.MergedDictionaries>


                <BitmapImage x:Key="DefaultAvatar" UriSource="pack://application:,,,/YouTrackClientVS.UI;component/Images/defaultAva.png" />

                <DataTemplate x:Key="CommitsTemplate" DataType="gitClientModels1:GitCommit">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto" SharedSizeGroup="SeparatorRow"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="B"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="C" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Image Width="30" Height="30" VerticalAlignment="Center" Margin="0,0,5,0" Source="{Binding Author.Links.Avatar.Href,TargetNullValue={StaticResource DefaultAvatar},FallbackValue={StaticResource DefaultAvatar}}"/>
                        <TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Text="{Binding Author.DisplayName}" Margin="0,0,10,0" TextWrapping="Wrap" FontWeight="Bold" Foreground="CornflowerBlue"/>

                        <TextBlock Grid.Row="0" Grid.Column="2" VerticalAlignment="Center">
                         <Hyperlink NavigateUri="{Binding CommitHref}" RequestNavigate="GoToCommit">
                              <TextBlock Foreground="CornflowerBlue" Text="{Binding Hash, Converter={converters:ShortCommitHashConverter}}"/>
                        </Hyperlink>
                    </TextBlock>

                        <TextBlock  VerticalAlignment="Center" Grid.Row="0" Grid.Column="3" Text="{Binding Date}" HorizontalAlignment="Right" Foreground="Gray"/>
                        <TextBlock  Grid.Row="1" Grid.Column="1" Text="{Binding Message}" Grid.ColumnSpan="3" TextWrapping="Wrap" Margin="0,5,15,0"/>
                        <Border Grid.Row="2"  Grid.ColumnSpan="4" Background="White" BorderBrush="LightGray" BorderThickness="0,1,0,0" Height="1"/>
                    </Grid>
                </DataTemplate>
            </ResourceDictionary>
        </Grid.Resources>

        <controls:MetroAnimatedTabControl >
            <controls:MetroAnimatedTabControl.Resources>
                <Style TargetType="TextBlock"/>
            </controls:MetroAnimatedTabControl.Resources>
            <controls:MetroTabItem Visibility="{Binding FileDiffs,Converter={converters:NullToNonVisibilityConverter}}" controls:ControlsHelper.HeaderFontSize="14"  Header="{Binding FileDiffs.Count,FallbackValue=0}" HeaderStringFormat="{}Files Changed ({0})" >

                <TreeView ItemsSource="{Binding FilesTree}" x:Name="FilesTree" Margin="0,4,0,0" >
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />

                        <Style TargetType="{x:Type TreeViewItem}" >
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GetTreeType}" Value="{x:Type tree:TreeDirectory}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Focusable" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <HierarchicalDataTemplate DataType="{x:Type tree:TreeDirectory}" ItemsSource="{Binding Files}">
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="{Binding IsExpanded, Converter={converters:TreeViewFolderIconConverter}}"
                                               Width="16"
                                               Height="16"
                                               SnapsToDevicePixels="True"
                                               />
                                <TextBlock Text="{Binding Path=Name}" Margin="5,0"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <DataTemplate DataType="{x:Type tree:TreeFile}" >
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="../Images/File.png"
                                               Width="16"
                                               Height="16"
                                               SnapsToDevicePixels="True"
                                               />
                                <TextBlock Margin="5,0">
                                            <Hyperlink 
                                                attachedProperties:SelectTreeViewAfterItemClickBehavior.TreeViewItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                                                Command="{Binding ElementName=PqDiffView,Path=DataContext.ShowDiffCommand}" CommandParameter="{Binding}" TextDecorations="None">
                                                  <TextBlock Text="{Binding Path=Name}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsAdded}" Value="True">
                                                            <Setter Property="Foreground" Value="Green" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsRemoved}" Value="True">
                                                            <Setter Property="Foreground" Value="Red" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                                  </TextBlock>
                                            </Hyperlink>
                                        </TextBlock>
                                <TextBlock Margin="5,0" FontWeight="Bold" Foreground="Green">
                                            <Run Text="+"/><Run Text="{Binding Added}"/>
                                </TextBlock>
                                <TextBlock FontWeight="Bold" Foreground="Red">
                                            <Run Text="-"/><Run Text="{Binding Removed}"/>
                                </TextBlock>
                               

                                <Image Margin="20,1,5,0" Source="../Images/comment.png"
                                       Width="16"
                                       Height="16"
                                       SnapsToDevicePixels="True"
                                />
                                <TextBlock >
                                    <Run Text="{Binding Comments}"/>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </controls:MetroTabItem>
            <controls:MetroTabItem Visibility="{Binding Commits,Converter={converters:NullToNonVisibilityConverter}}"  controls:ControlsHelper.HeaderFontSize="14" Header="{Binding Commits.Count,FallbackValue=0}" HeaderStringFormat="{}Commits ({0})">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ItemsControl HorizontalAlignment="Stretch" Margin="5" Grid.IsSharedSizeScope="True" ItemsSource="{Binding Commits}" Focusable="False" HorizontalContentAlignment="Stretch"  ItemTemplate="{StaticResource CommitsTemplate}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                             >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VirtualizationMode="Recycling"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Focusable" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Resources>
                    </ItemsControl>
                </ScrollViewer>
            </controls:MetroTabItem>

            <controls:MetroTabItem Visibility="{Binding CommentViewModel.CommentTree,Converter={converters:NullToNonVisibilityConverter}}"  controls:ControlsHelper.HeaderFontSize="14" Header="{Binding CommentViewModel.CommentsCount,FallbackValue=0}"  HeaderStringFormat="{}Comments ({0})">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" BorderThickness="0,0,0,0.1" BorderBrush="Black" Margin="10">
                        <controls1:AddCommentView 
                                              AddCommand="{Binding CommentViewModel.AddCommentCommand}"
                                              CurrentText="{bindings:ValidatedBinding CommentViewModel.CommentText,Mode=TwoWay}"
                                              ButtonLabelContent="Comment"
                        />
                    </Border>



                    <controls1:CommentsTreeView Grid.Row="1" Margin="5"
                        CommentTree="{Binding CommentViewModel.CommentTree}" 
                        DeleteCommand="{Binding CommentViewModel.DeleteCommentCommand}"
                        ReplyCommand="{Binding CommentViewModel.ReplyCommentCommand}"
                        EditCommand="{Binding CommentViewModel.EditCommentCommand}"
                        UserName ="{Binding CommentViewModel.CurrentUserName}"
                        TrackedItem ="{Binding CommentViewModel.LastEditedComment}"
                    />
                </Grid>
            </controls:MetroTabItem>
        </controls:MetroAnimatedTabControl>
    </Grid>
</UserControl>
