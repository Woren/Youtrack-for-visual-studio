<UserControl x:Class="YouTrackClientVS.UI.Controls.CommentsTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:xaml="clr-namespace:Markdown.Xaml;assembly=Markdown.Xaml"
             xmlns:tree="clr-namespace:YouTrackClientVS.Contracts.Models.Tree;assembly=YouTrackClientVS.Contracts"
             xmlns:styles="clr-namespace:YouTrackClientVS.UI.Styles"
             xmlns:converters="clr-namespace:YouTrackClientVS.UI.Converters"
             xmlns:behaviours="clr-namespace:YouTrackClientVS.UI.Behaviours"
             xmlns:controls="clr-namespace:YouTrackClientVS.UI.Controls"
             xmlns:bindings="clr-namespace:YouTrackClientVS.UI.Bindings"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="CommentView"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <styles:SharedResourceDictionary Source="pack://application:,,,/YouTrackClientVS.UI;component/Styles/SharedDictionary.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />

                <styles:SharedResourceDictionary Source="pack://application:,,,/YouTrackClientVS.UI;component/Styles/Markdown.Demo.Styles.Default.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:UserCommentButtonVisibilityConverter x:Key="UserCommentButtonVisibilityConverter" />
            <converters:UrlToImageSourceConverter x:Key="UrlToImageSourceConverter"  />
            <Style TargetType="{x:Type Paragraph}">
                <Setter Property="Margin" Value="0"/>
            </Style>

            <xaml:Markdown x:Key="Markdown"
                           DocumentStyle="{StaticResource DocumentStyle}"
                           Heading1Style="{StaticResource H1Style}"
                           Heading2Style="{StaticResource H2Style}"
                           Heading3Style="{StaticResource H3Style}"
                           Heading4Style="{StaticResource H4Style}"
                           LinkStyle="{StaticResource LinkStyle}"
                           ImageStyle="{StaticResource ImageStyle}"
                           SeparatorStyle="{StaticResource SeparatorStyle}"
                           AssetPathRoot="{x:Static system:Environment.CurrentDirectory}"
                           ImageManager="{StaticResource UrlToImageSourceConverter}"
                           />


            <xaml:TextToFlowDocumentConverter x:Key="TextToFlowDocumentConverter"  Markdown="{StaticResource Markdown}"/>
        </ResourceDictionary>

    </UserControl.Resources>
    <Grid>
        <TreeView x:Name="TView" ItemsSource="{Binding ElementName=CommentView,Path=CommentTree}" Margin="0,4,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
            <i:Interaction.Behaviors>
                <behaviours:MoveToTouchedTreeViewItem TrackedItem="{Binding ElementName=CommentView,Path=TrackedItem}" />
            </i:Interaction.Behaviors>

            <TreeView.Resources>
                <Style x:Key="TreeViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="Height" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                                    <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                        <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="RenderTransform" TargetName="ExpandPath">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>




                </Style>
                <Style TargetType="{x:Type TreeViewItem}" >
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Border x:Name="Bd" BorderBrush="Gray" BorderThickness="0,0,0,0.5" Background="{TemplateBinding Background}" Grid.Column="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ItemsPresenter Margin="40,0,0,0"  x:Name="ItemsHost" Grid.Column="0" Grid.Row="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding AllDeleted}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <HierarchicalDataTemplate DataType="{x:Type tree:CommentTree}" ItemsSource="{Binding Comments}">
                    <Grid >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Background="#E6E6E7" Visibility="{Binding Comment.IsDeleted, Converter={converters:BoolToVisibilityConverter}}">
                            <ToggleButton x:Name="Expander"
                                          VerticalAlignment="Center"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsExpanded,Mode=TwoWay}"
                            >
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource ExpandCollapseToggleStyle}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Comments.Count}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            
                            <TextBlock Margin="5,10" Text="Comment Deleted" FontWeight="Light" Foreground="Black"/>
                        </StackPanel>

                        <Grid Margin="0,5" Visibility="{Binding Comment.IsDeleted, Converter={converters:BoolToNonVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                                <ToggleButton 
                                              ClickMode="Press"
                                              IsChecked="{Binding IsExpanded,Mode=TwoWay}"
                                              >
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource ExpandCollapseToggleStyle}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Comments.Count}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                    </ToggleButton>
                           
                                <Image  VerticalAlignment="Center" Source="{Binding Comment.User.Links.Avatar.Href}" Width="20" Height="20" Margin="0,0,5,0"/>
                            </StackPanel>
                            
                            <TextBlock Grid.Row="0" Grid.Column="1"  VerticalAlignment="Top" HorizontalAlignment="Stretch" Text="{Binding Comment.User.DisplayName}" FontWeight="Bold" Foreground="CornflowerBlue"></TextBlock>

                            <FlowDocumentScrollViewer Grid.Row="1" Grid.Column="1" 
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Stretch"
                                                      Margin="0,0,0,2"
                                                      VerticalScrollBarVisibility="Disabled"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      Document="{Binding Comment.Content.Html, Converter={StaticResource TextToFlowDocumentConverter}}" />

                            <StackPanel Grid.Column="1" Grid.Row="2"  Orientation="Horizontal" Margin="0,2,0,0">
                                <Button Style="{StaticResource ActionLinkButton}" Content="Reply" Command="{Binding ElementName=CommentView,Path=EnterReplyModeCommand}" CommandParameter="{Binding}"/>
                                <Separator Style="{StaticResource VerticalSeparator}" />
                                <Button x:Name="EditButton"  Style="{StaticResource ActionLinkButton}" Content="Edit" Command="{Binding ElementName=CommentView,Path=EnterEditModeCommand}" CommandParameter="{Binding}">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource UserCommentButtonVisibilityConverter}">
                                            <Binding Path="UserName" ElementName="CommentView" />
                                            <Binding Path="Comment" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                                <Separator Style="{StaticResource VerticalSeparator}" Visibility="{Binding ElementName=EditButton,Path=Visibility}" />
                                <Button x:Name="DeleteButton" Style="{StaticResource ActionLinkButton}" Content="Delete" Command="{Binding ElementName=CommentView,Path=DeleteCommand}" CommandParameter="{Binding}" >
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource UserCommentButtonVisibilityConverter}">
                                            <Binding Path="UserName" ElementName="CommentView" />
                                            <Binding Path="Comment" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                                <Separator Style="{StaticResource VerticalSeparator}" Visibility="{Binding ElementName=DeleteButton,Path=Visibility}"/>
                                <TextBlock HorizontalAlignment="Stretch" Margin="5,0,0,0" Text="{Binding Comment.UpdatedOn,Converter={converters:HumanizeDateTimeConverter}}" Foreground="Gray"></TextBlock>

                              
                            </StackPanel>

                            <Grid Grid.Row="3" Grid.Column="1" Margin="0,5,0,0">
                                <controls:AddCommentView
                                    AddCommand="{Binding ElementName=CommentView,Path=ReplyCommand}"
                                    AddCommandParameter="{Binding}"
                                    CurrentText="{bindings:ValidatedBinding ReplyContent}"
                                    ButtonLabelContent="Comment"
                                    Visibility="{Binding IsReplyExpanded, Converter={converters:BoolToVisibilityConverter},Mode=TwoWay}"
                                />
                                <controls:AddCommentView
                                    AddCommand="{Binding ElementName=CommentView,Path=EditCommand}"
                                    AddCommandParameter="{Binding}"
                                    CurrentText="{bindings:ValidatedBinding EditContent}"
                                    ButtonLabelContent="Comment"
                                    Visibility="{Binding IsEditExpanded, Converter={converters:BoolToVisibilityConverter},Mode=TwoWay}"
                                />
                            </Grid>
                        </Grid>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>
